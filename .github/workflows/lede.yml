name: 编译openwrt固件

on: 
  release:
    types: [published]

  #push:
  #  branches: 
  #    - master

  schedule:
    - cron:  1 0 * * 6
  
  watch:
    types: [started]
    

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 查询磁盘空间
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: 准备清理磁盘空间
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

    - name: 清理磁盘空间
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 2048
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: 清理后磁盘空间
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="
    
    - name: 准备开始
      uses: actions/checkout@main

    - name: 安装系统依赖
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
        libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
        vim wget xmlto xxd zlib1g-dev python3-setuptools
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo rm -rf /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc /usr/share/dotnet /usr/local/graalvm /usr/local/.ghcup \
        /usr/local/share/powershell /usr/local/share/chromium /usr/local/lib/node_modules
        sudo -E systemctl daemon-reload
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        
    - name: 下载固件源码和软件包
      working-directory: ./
      run: |
        # 下载固件源码
        git clone https://github.com/coolsnowwolf/lede

    - name: 更新和安装软件包
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
        
    - name: 常用配置修改
      run: |
        cd lede
        git clone https://github.com/gd0772/package package/gd772
        git clone https://github.com/kenzok8/small package/gd772/passwall
        rm -rf package/gd772/passwall/luci-app-passwall2 package/gd772/passwall/luci-app-ssr-plus package/gd772/passwall/luci-app-bypass
        git clone https://github.com/fw876/helloworld package/gd772/ssrplus
        rm -rf ./feeds/luci/applications/luci-app-netdata
        git clone https://github.com/Jason6111/luci-app-netdata ./feeds/luci/applications/luci-app-netdata/
        sed -i "s/192.168.1.1/192.168.2.3/g" package/base-files/files/bin/config_generate
        sed -i 's/\"services\"/\"nas\"/g' feeds/luci/applications/luci-app-samba4/luasrc/controller/samba4.lua
        sed -i 's/TTYD 终端/命令行/g' feeds/luci/applications/luci-app-ttyd/po/zh-cn/terminal.po
        sed -i 's/Turbo ACC 网络加速/网络加速/g' feeds/luci/applications/luci-app-turboacc/po/zh-cn/turboacc.po
        

    - name: 配置固件文件
      run: |
        cd lede
        rm -f ./.config*
        touch ./.config
        cat >> .config <<EOF
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y
        # CONFIG_GRUB_EFI_IMAGES is not set
        CONFIG_GRUB_IMAGES=y
        CONFIG_PACKAGE_bash=y
        CONFIG_PACKAGE_blkid=y
        CONFIG_PACKAGE_boost=y
        CONFIG_PACKAGE_boost-program_options=y
        CONFIG_PACKAGE_boost-system=y
        CONFIG_PACKAGE_coreutils-nohup=y
        CONFIG_PACKAGE_coreutils-timeout=y
        # CONFIG_PACKAGE_etherwake is not set
        # CONFIG_PACKAGE_grub2-bios-setup is not set
        # CONFIG_PACKAGE_grub2-efi is not set
        CONFIG_PACKAGE_haproxy=y
        CONFIG_PACKAGE_ipt2socks=y
        CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
        CONFIG_PACKAGE_iptables-mod-iprange=y
        CONFIG_PACKAGE_iptables-mod-socket=y
        CONFIG_PACKAGE_kmod-inet-diag=y
        CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
        CONFIG_PACKAGE_kmod-ipt-iprange=y
        CONFIG_PACKAGE_kmod-ipt-socket=y
        CONFIG_PACKAGE_kmod-netlink-diag=y
        CONFIG_PACKAGE_kmod-nf-socket=y
        CONFIG_PACKAGE_libcap-bin=y
        CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
        CONFIG_PACKAGE_libltdl=y
        CONFIG_PACKAGE_liblua5.3=y
        CONFIG_PACKAGE_libparted=y
        CONFIG_PACKAGE_libruby=y
        CONFIG_PACKAGE_libstdcpp=y
        CONFIG_PACKAGE_libuv=y
        CONFIG_PACKAGE_libwebsockets-full=y
        CONFIG_PACKAGE_libyaml=y
        # CONFIG_PACKAGE_luci-app-accesscontrol is not set
        # CONFIG_PACKAGE_luci-app-arpbind is not set
        # CONFIG_PACKAGE_luci-app-autoreboot is not set
        # CONFIG_PACKAGE_luci-app-ddns is not set
        CONFIG_PACKAGE_luci-app-diskman=y
        CONFIG_PACKAGE_luci-app-netdata=y
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-app-passwall=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Client=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Client=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Server=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Simple_Obfs=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_SingBox=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_Plus=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
        CONFIG_PACKAGE_luci-app-passwall_Iptables_Transparent_Proxy=y
        CONFIG_PACKAGE_luci-app-smartdns=y
        CONFIG_PACKAGE_luci-app-ttyd=y
        # CONFIG_PACKAGE_luci-app-upnp is not set
        # CONFIG_PACKAGE_luci-app-vlmcsd is not set
        # CONFIG_PACKAGE_luci-app-vsftpd is not set
        # CONFIG_PACKAGE_luci-app-wol is not set
        CONFIG_PACKAGE_luci-i18n-diskman-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-netdata-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-smartdns-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-ttyd-zh-cn=y
        CONFIG_PACKAGE_luci-theme-atmaterial=y
        # CONFIG_PACKAGE_miniupnpd is not set
        CONFIG_PACKAGE_netdata=y
        CONFIG_PACKAGE_parted=y
        CONFIG_PACKAGE_ruby=y
        CONFIG_PACKAGE_ruby-bigdecimal=y
        CONFIG_PACKAGE_ruby-date=y
        CONFIG_PACKAGE_ruby-digest=y
        CONFIG_PACKAGE_ruby-enc=y
        CONFIG_PACKAGE_ruby-forwardable=y
        CONFIG_PACKAGE_ruby-pstore=y
        CONFIG_PACKAGE_ruby-psych=y
        CONFIG_PACKAGE_ruby-stringio=y
        CONFIG_PACKAGE_ruby-strscan=y
        CONFIG_PACKAGE_ruby-yaml=y
        CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
        CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
        CONFIG_PACKAGE_sing-box=y
        CONFIG_PACKAGE_smartdns=y
        CONFIG_PACKAGE_smartmontools=y
        CONFIG_PACKAGE_trojan-plus=y
        CONFIG_PACKAGE_ttyd=y
        CONFIG_PACKAGE_unzip=y
        CONFIG_PACKAGE_v2ray-plugin=y
        # CONFIG_PACKAGE_vlmcsd is not set
        # CONFIG_PACKAGE_vsftpd-alt is not set
        # CONFIG_PACKAGE_wol is not set
        CONFIG_PARTED_READLINE=y
        CONFIG_SING_BOX_WITH_CLASH_API=y
        CONFIG_SING_BOX_WITH_DHCP=y
        CONFIG_SING_BOX_WITH_ECH=y
        CONFIG_SING_BOX_WITH_GVISOR=y
        CONFIG_SING_BOX_WITH_QUIC=y
        CONFIG_SING_BOX_WITH_UTLS=y
        CONFIG_SING_BOX_WITH_WIREGUARD=y
        CONFIG_TARGET_KERNEL_PARTSIZE=200
        CONFIG_TARGET_ROOTFS_PARTSIZE=700
        CONFIG_TARGET_ROOTFS_TARGZ=y
        CONFIG_boost-compile-visibility-hidden=y
        CONFIG_boost-runtime-shared=y
        CONFIG_boost-static-and-shared-libs=y
        CONFIG_boost-variant-release=y
        EOF
        sed -i 's/^[ \t]*//g' ./.config
        make defconfig


    - name: 下载DL库
      run: |
        cd lede
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    
        
    - name: 开始编译固件
      run: |
        cd lede
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
  
    - name: 整理发布文件
      id: assemble_artifact
      run: |
         cp -f "lede/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined.img" "./openwrt.img"
         zip OpenWrt.zip ./openwrt.img
         release_tag="openwrt-$(date +%Y-%m-%d)"
         echo "##[set-output name=release_tag;]$release_tag" 
         
    - name: 配置发布信息
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHU_TOKEN }}
      with:
        tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
        release_name: ${{ steps.assemble_artifact.outputs.release_tag }}
        draft: false
        prerelease: false
        
    - name: 发布固件到Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHU_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: OpenWrt.zip
        asset_name: OpenWrt.zip
        asset_content_type: application/zip

       
