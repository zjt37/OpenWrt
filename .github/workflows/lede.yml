name: 编译openwrt固件(测试)

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'true'
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 准备开始
      uses: actions/checkout@main

      
    - name: 安装系统依赖
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir


    - name: 下载固件源码和软件包
      run: |
        git clone https://github.com/coolsnowwolf/lede
        
    - name: 更新和安装软件包
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: 常用配置修改
      run: |
        cd lede
        rm -rf ./feeds/packages/net/smartdns
        rm -rf ./feeds/luci/applications/luci-app-jd-dailybonus
        rm -rf ./feeds/luci/applications/luci-app-rp-pppoe-server
        rm -rf ./feeds/luci/applications/luci-app-usb-printer
        rm -rf ./feeds/luci/applications/luci-app-dockerman
        rm -rf ./feeds/luci/applications/luci-app-unblockmusic
        rm -rf ./feeds/luci/applications/luci-app-ipsec-vpnd
        git clone https://github.com/gd0772/package package/zheng
        git clone https://github.com/fw876/helloworld package/zheng/ssrplus
        git clone https://github.com/xiaorouji/openwrt-passwall package/zheng/passwall && git clone -b luci https://github.com/xiaorouji/openwrt-passwall && mv openwrt-passwall/luci-app-passwall package/zheng/passwall && rm -rf openwrt-passwall
        git clone https://github.com/pymumu/luci-app-smartdns.git -b lede ./package/zheng/luci-app-smartdns
        git clone https://github.com/pymumu/openwrt-smartdns.git ./feeds/packages/net/smartdns
        svn export https://github.com/kiddin9/openwrt-packages/trunk/luci-app-adguardhome package/zheng/luci-app-adguardhome
        sed -i "s/bootstrap/atmaterial/g" feeds/luci/collections/luci/Makefile
        rm -rf ./feeds/freifunk/themes
        rm -rf ./feeds/luci/themes/luci-theme-argon
        rm -rf ./feeds/luci/themes/luci-theme-netgear
        rm -rf ./feeds/luci/themes/luci-theme-material
        rm -rf ./feeds/luci/applications/luci-app-netdata
        git clone https://github.com/Jason6111/luci-app-netdata ./feeds/luci/applications/luci-app-netdata/
        sed -i "s/192.168.1.1/192.168.2.3/g" package/base-files/files/bin/config_generate
        sed -i 's/\"services\"/\"nas\"/g' feeds/luci/applications/luci-app-samba4/luasrc/controller/samba4.lua
        sed -i 's/TTYD 终端/命令行/g' feeds/luci/applications/luci-app-ttyd/po/zh-cn/terminal.po
        sed -i 's/ShadowSocksR Plus+/SSR Plus+/g' package/zheng/ssrplus/luci-app-ssr-plus/luasrc/controller/shadowsocksr.luased -i 's/ShadowSocksR Plus+/SSR Plus+/g' package/zheng/ssrplus/luci-app-ssr-plus/luasrc/controller/shadowsocksr.lua
        sed -i 's/Turbo ACC 网络加速/网络加速/g' feeds/luci/applications/luci-app-turboacc/po/zh-cn/turboacc.po

    
    - name: 连接SSH
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}  

    - name: 下载DL库
      run: |
        cd lede
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 开始编译固件
      run: |
        cd lede
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: 上传固件
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt
        path: lede/bin/targets/x86/64    




        
