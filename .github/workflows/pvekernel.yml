name: 编译PVE内核

on: 
  release:
    types: [published]

  #push:
  #  branches: 
  #    - master

  schedule:
    - cron: 1 0 * * 6
  
  watch:
    types: [started]
    
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: 准备开始
      uses: actions/checkout@main
    
    - name: 安装系统依赖
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        git pull
        sudo -E rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E wget http://download.proxmox.com/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg
        sudo -E chmod +r /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg
        sudo -E apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138
        sudo -E chmod a+w /etc/apt/sources.list
        sudo -E echo "deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription" >>/etc/apt/sources.list
        sudo -E echo "deb http://download.proxmox.com/debian/pmg bullseye pmg-no-subscription" >>/etc/apt/sources.list
        sudo -E echo "deb http://deb.debian.org/debian bullseye main" >>/etc/apt/sources.list
        sudo -E apt-get update
        sudo -E apt-get install git nano screen patch fakeroot build-essential devscripts libncurses5 libncurses5-dev libssl-dev bc flex bison libelf-dev libaudit-dev libgtk2.0-dev libperl-dev asciidoc xmlto gnupg gnupg2 rsync lintian debhelper libdw-dev libnuma-dev libslang2-dev sphinx-common asciidoc-base automake cpio dh-python file gcc kmod libiberty-dev libtool python3-minimal sed tar zlib1g-dev liblz4-tool idn zstd libpve-common-perl systemtap-sdt-dev libcap-dev libzstd-dev libbabeltrace-dev libunwind-dev python3-dev binutils-dev dwarves
        sudo -E apt-get autoremove --purge
        sudo -E apt-get clean
    
    - name: 下载固件源码和软件包
      run: |
        git clone git://git.proxmox.com/git/pve-kernel.git -b master pve-kernel
    
    - name: 修改内核配置
      run: |
        cd pve-kernel
        sed -i "s/106 @@/105 @@/g" patches/kernel/0003-pci-Enable-overrides-for-missing-ACS-capabilities-4..patch
        sed -i "/pci_find_ext_capability(dev, PCI_EXT_CAP_ID_ACS))/d" patches/kernel/0003-pci-Enable-overrides-for-missing-ACS-capabilities-4..patch
        sed -i "s/(dev) ||/(dev))/g" patches/kernel/0003-pci-Enable-overrides-for-missing-ACS-capabilities-4..patch
        sed -i 's/${LINUX_TOOLS_DBG_DEB}//' Makefile
        sed -i "s/rules fwcheck abicheck/rules abicheck/" debian/rules
       
    - name: 修改配置文件
      run: |
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
        df -h
        #sudo -E apt-get remove -y '^ghc-8.*'
        sudo -E apt-get remove -y '^dotnet-.*'
        sudo -E apt-get remove -y '^llvm-.*'
        sudo -E apt-get remove -y 'php.*'
        sudo -E apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
        sudo -E apt-get autoremove -y
        sudo -E apt-get clean
        sudo -E rm -rf /usr/share/dotnet/
        df -h
     
    - name: 开始编译固件
      run: |
        cd pve-kernel
        echo -e "$(nproc) thread build."
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
        
    - name: 整理发布文件
      id: assemble_artifact
      run: |
        zip pve-kernel.zip pve-kernel/*deb
        release_tag="pve-kernel-$(date +%Y-%m-%d)"
        echo "##[set-output name=release_tag;]$release_tag"
        
    - name: 配置发布信息
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHU_TOKEN }}
      with:
        tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
        release_name: ${{ steps.assemble_artifact.outputs.release_tag }}
        draft: false
        prerelease: false
        
    - name: 发布内核到Release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHU_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: pve-kernel.zip
        asset_name: pve-kernel.zip
        asset_content_type: application/zip

        
        
        
        
        
        
        
        
        
        
