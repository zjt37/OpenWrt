name: 编译openwrt固件(测试）

on: 
  workflow_dispatch:
   inputs:
      ssh:
        description: '[ssh-actions]改成[ssh],再按[Run workflow]按钮启动,则开启SSH连接配置固件'
        required: false
        default: 'ssh'
    

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 准备开始
      uses: actions/checkout@main
      
    - name: 清理磁盘空间
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 2048
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: 安装系统依赖
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
        libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
        vim wget xmlto xxd zlib1g-dev python3-setuptools
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo rm -rf /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc /usr/share/dotnet /usr/local/graalvm /usr/local/.ghcup \
        /usr/local/share/powershell /usr/local/share/chromium /usr/local/lib/node_modules
        sudo -E systemctl daemon-reload
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        
    - name: 下载固件源码
      working-directory: ./
      run: |
        # 下载固件源码
        git clone https://github.com/coolsnowwolf/lede

    - name: 更新和安装软件包
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
        
    - name: 常用配置修改
      run: |
        cd lede
        git clone https://github.com/gd0772/package package/gd772
        git clone https://github.com/kenzok8/small package/gd772/passwall
        rm -rf package/gd772/passwall/luci-app-passwall2 package/gd772/passwall/luci-app-ssr-plus package/gd772/passwall/luci-app-bypass
        git clone https://github.com/fw876/helloworld package/gd772/ssrplus
        rm -rf ./feeds/luci/applications/luci-app-netdata
        git clone https://github.com/Jason6111/luci-app-netdata ./feeds/luci/applications/luci-app-netdata/
        sed -i "s/192.168.1.1/192.168.2.3/g" package/base-files/files/bin/config_generate
        sed -i 's/ShadowSocksR Plus+/SSR Plus+/g' package/gd772/ssrplus/luci-app-ssr-plus/luasrc/controller/shadowsocksr.lua
        sed -i 's/TTYD 终端/命令行/g' feeds/luci/applications/luci-app-ttyd/po/zh-cn/terminal.po
        sed -i 's/Turbo ACC 网络加速/网络加速/g' feeds/luci/applications/luci-app-turboacc/po/zh-cn/turboacc.po
  
    - name: SSH连接
      uses: danshui-git/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || (github.event.inputs.ssh == 'ssh' && github.event.inputs.ssh  != 'false')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 下载DL库
      run: |
        cd lede
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 开始编译固件
      run: |
        cd lede
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: 上传固件
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt
        path: lede/bin/targets/
